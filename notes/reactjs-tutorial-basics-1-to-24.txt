REACTJS TUTORIAL (BASICS) #1 to #24

# 1 - Introduction
    React is an open source JS library for building on user interfaces.
    ## Why Learn React?
        - Created, used and maintained by Facebook. Thus, it is going to stay for a long time.
        - It has a huge community
        - In demand
    ## Features or Characteristics
        - React has a component based architecture - allows you to break down your website into small components which
        compose the entire page.
        - It allows developers to write reusable code.
        - React is also declarative - say what you want and React builds the actual UI in its own way (the opposite
        paradigm is imperative).
        - With a good knowledge of React, you can explore the field of mobile application (React Native)
    ## Prerequisites
        - HTML, CSS; and
        - JavaScript fundamentals - this, filter, map, reduce.
        - ES6 - let & const, arrow functions, template literals, default parameters, object literals,
        rest and spread operators, and destructuring assignment.
    ## Course Content
        - Fundamentals
        - HTTP
        - Routing
        - Redux
        - Utilities

# 2 - Hello World
    To run your very first React application, you need:
    - Node.js
    - Text editor - VSCode

    You can create a React app using the command line tool - create react app (CRA):
    Run
        >>> npx create-react-app <name of project>
    To run the command:
    - Navigate to the project directory
        >>> cd <name of project>
    - Run the command to start the application:
        >>> npm start
    Another similar method to create a React app is by installing the create-react-app globally and then running it:
        >>> npm install create-react-app -g
            create-react-app <project_name>

# 3 - Folder Structure
    # The following files and folder can be found in a typical React application:
    - node_modules/ - contains the packages used by React
    - public/ - contains files or assets meant to be displayed to the public. Common files in it include:
        - index.html - The only HTML file in a React app. It has a <div> element with id="root" which allows React
        to dynamically change the view
        - manifest.json - contains info about the React app usually used in PWAs
        - Others are: robots.txt, favicon.ico, etc.
    - src/ - contains the source code for the React components. Files found in it include:
        - index.js - this is included in the index.html and is the starting point of the React app. It selects the
        "root" element and injects the UI HTML into it.
        - App.js - this file contains the root app component: the App component. All other components are found in it.
        - App.css - stylesheets for App.js component.
        - index.css - stylesheets for index.js component.
    - .gitignore - tells Git which files/folders to not track. This is important to prevent pushing the node_modules.
    - package.json - contains all the package list required and scripts required to run the React application.
    - package-lock.json - contains information about the packages used as well the specific version to "lock in" the
    application with that version
    - README.md - a README file with some information on how to get started with the React app
    # How the React runs:
        - The index.js includes in the index.html grabs (or selects) the DOM "root" HTML element.
        - The index.js, then renders the App component in the App.css
        - The App component in turn renders other components.
        That is: Your components -> App component -> index.js -> index.html

# 4  - Components
    A React component is basically a part of the React application. Components are reusable and can be modified to
    display different information. A component is placed in a JavaScript file named as PascalCaseComponent.js.
    Basically, components can be said to be in two category:
    - stateless functional component - they are the usual JS functions returning HTML (or JSX as we shall soon see).
    - stateful class component - they are the usual JS classes extending the Component class (imported from 'react')
     with a render() method.
